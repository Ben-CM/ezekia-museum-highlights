// Base colour variables
$primary: #1e1f2e;
$secondary: #3a3d5a;
$accent: #5d6c92;
$light: #707293;

// Partner colour variables
$partner-primary: #2c2d33;
$partner-secondary: #54575f;

// Define the Roboto font face with variable weights and styles
@font-face {
    font-family: 'Roboto';
    src: url('../assets/fonts/Roboto-VariableFont_wdth,wght.ttf') format('truetype'),
        url('../assets/fonts/Roboto-Italic-VariableFont_wdth,wght.ttf') format('truetype');

    font-weight: 400 700;
    font-style: normal italic;
}

// Set the base font size for the html element
html {
    font-size: 16px;
    overflow-x: hidden;
}

// Apply the Roboto font family to the body element and remove default margin and padding
body {
    font-family: 'Roboto', sans-serif;
    margin: 0;
    padding: 0;
}

// Define containers to horizontally pad content
.container {
    padding: 0 20px;
    margin: 0 auto;
    width: calc(100% - 40px);
    max-width: 100%;

    @media screen and (min-width:768px) {
        padding: 0 64px;

        width: calc(100% - 128px);

    }

    @media screen and (min-width:1472px) {
        max-width: 1440px;
    }


}

// Define sections to vertically stack content with padding
.section {
    padding-top: 3rem;
    padding-bottom: 3rem;

    &.is-small {
        padding-top: 1.5rem;
        padding-bottom: 1.5rem;
    }

    // is-small is not used, but is included for demonstration. Further modifiers can be added e.g. is-large, is-medium etc.
}

// Wrapper for button groups
.buttons {
    display: flex;
    flex-wrap: wrap;

    &--small-gap {
        gap: 0.5rem;
    }

    &--end {
        justify-content: flex-end;
    }

    // Further modifiers here...
}

// Base button styling
.button {
    font-family: inherit; // Required as user agent stylesheets may apply different font families
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1rem;
    padding: 0.5rem 1rem;
    transition: 0.3s;
    background-color: $primary;
    color: #fafafa;

    &:hover {
        background-color: $accent;
    }

    &-light {
        background-color: $light;
        color: #fafafa;

        &:hover {
            background-color: $accent;
        }
    }
}

// Default link styling
a {
    color: inherit;
    text-decoration: underline;
    text-decoration-color: transparent;
    text-underline-offset: 0.2rem;
    transition: 0.15s;

    &:hover {
        text-decoration-color: inherit;
    }

    &.button {
        text-decoration: none;
    }
}